kind: pipeline
type: docker
name: direct-deploy

trigger:
  branch:
    - main
    - master

steps:
  - name: build
    image: maven:3.9.8-eclipse-temurin-21
    commands:
      - mvn clean package -DskipTests

  - name: copy-jar
    image: appleboy/drone-scp
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      target: /opt/app/
      source:
        - target/*.jar
      strip_components: 1
    depends_on: [build]

  - name: debug-setup
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - |
          echo "=== Debug: Server Environment ==="
          cd /opt/app
          echo "Java version:"
          java -version
          echo "Memory:"
          free -h
          echo "Disk space:"
          df -h
          echo "JAR file details:"
          ls -la *.jar
          echo "JAR contents (first level):"
          jar tf ar-webapp-1.0.0.jar | head -20 || echo "Cannot inspect JAR"
    depends_on: [copy-jar]

  - name: test-run-manual
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - |
          echo "=== Testing manual application run ==="
          cd /opt/app
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å—ë
          pkill -f "java.*jar" || true
          sleep 3
          
          # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
          mkdir -p models logs
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ä—É—á–Ω—É—é (–Ω–µ –≤ —Ñ–æ–Ω–µ) —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏
          echo "Starting application in foreground..."
          timeout 30s java -jar ar-webapp-1.0.0.jar --server.port=2062 2>&1 | tee logs/startup.log || echo "Application exited"
          
          echo "=== Startup log ==="
          cat logs/startup.log
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã
          echo "=== Java processes after manual start ==="
          ps aux | grep java | grep -v grep || echo "No Java processes"
    depends_on: [debug-setup]

  - name: deploy-final
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - |
          echo "=== Final deployment attempt ==="
          cd /opt/app
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å—ë
          pkill -f "java.*jar" || true
          sleep 5
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
          if pgrep -f "java.*jar" > /dev/null; then
            echo "‚ö†Ô∏è  Some Java processes still running, forcing kill"
            pkill -9 -f "java.*jar" || true
            sleep 2
          fi
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
          echo "Starting application..."
          nohup java -jar ar-webapp-1.0.0.jar --server.port=2062 > logs/app.log 2>&1 &
          APP_PID=$!
          echo "Started with PID: $APP_PID"
          
          # –ñ–¥–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
          for i in {1..10}; do
            if ps -p $APP_PID > /dev/null; then
              echo "‚úÖ Application still running after $(($i*3)) seconds"
              sleep 3
            else
              echo "‚ùå Application died after $(($i*3)) seconds"
              echo "=== Last 50 lines of log ==="
              tail -50 logs/app.log
              exit 1
            fi
          done
          
          echo "=== Final check ==="
          echo "Java processes:"
          ps aux | grep java | grep -v grep
          echo "Port 2062:"
          netstat -tlnp | grep 2062 || echo "Port not listening"
          echo "Logs:"
          tail -20 logs/app.log
          
          echo "üéâ Deployment successful!"
    depends_on: [test-run-manual]