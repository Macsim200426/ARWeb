kind: pipeline
type: docker
name: direct-deploy

trigger:
  branch:
    - main
    - master

steps:
  - name: build
    image: maven:3.9.8-eclipse-temurin-21
    commands:
      - mvn clean package -DskipTests

  - name: copy-jar
    image: appleboy/drone-scp
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      target: /opt/app/
      source:
        - target/*.jar
      strip_components: 1
    depends_on: [build]

  - name: nuclear-cleanup
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - |
          echo "=== NUCLEAR DISK CLEANUP ==="
          echo "BEFORE CLEANUP:"
          df -h
          
          # ЖЕСТКАЯ очистка Docker
          echo "Cleaning Docker aggressively..."
          sudo docker system prune -af || echo "Docker not available"
          sudo docker volume prune -f || echo "No docker volumes"
          
          # Очистка системных логов
          echo "Cleaning system logs..."
          sudo journalctl --vacuum-time=1h
          sudo find /var/log -name "*.log" -type f -exec truncate -s 0 {} \; 2>/dev/null || true
          
          # Очистка временных файлов
          echo "Cleaning temp files..."
          sudo rm -rf /tmp/*
          sudo rm -rf /var/tmp/*
          
          # Очистка кэша пакетов
          echo "Cleaning package cache..."
          sudo apt clean
          sudo apt autoremove -y --purge
          
          # Очистка старых логов приложения
          echo "Cleaning app logs..."
          sudo find /opt/app -name "*.log" -type f -delete 2>/dev/null || true
          
          echo "AFTER CLEANUP:"
          df -h
          
          # Проверяем сколько места освободилось
          echo "Available space:"
          df -h /opt/app
    depends_on: [copy-jar]

  - name: check-if-we-have-space
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - |
          echo "=== CHECKING IF WE HAVE ENOUGH SPACE ==="
          df -h
          
          # Проверяем свободное место в мегабайтах
          FREE_SPACE=$(df /opt/app | awk 'NR==2 {print $4}')
          echo "Free space: ${FREE_SPACE}KB"
          
          # Если меньше 1GB - критично
          if [ "$FREE_SPACE" -lt 1000000 ]; then
            echo "❌ CRITICAL: Still less than 1GB free space!"
            echo "Need to manually clean up more space"
            exit 1
          else
            echo "✅ Enough space available"
          fi
    depends_on: [nuclear-cleanup]

  - name: deploy-with-extreme-measures
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - |
          echo "=== DEPLOYING WITH EXTREME MEASURES ==="
          cd /opt/app
          
          # Жесткая остановка ВСЕХ Java процессов
          echo "Killing all Java processes..."
          sudo pkill -9 -f java || true
          sleep 5
          
          # Проверяем что ничего не осталось
          if pgrep -f java > /dev/null; then
            echo "❌ Java processes still running, cannot continue"
            ps aux | grep java
            exit 1
          fi
          
          # Запускаем с абсолютным минимумом
          echo "Starting application with bare minimum..."
          java -Xms16m -Xmx64m -jar ar-webapp-1.0.0.jar --server.port=2062 &
          APP_PID=$!
          echo "App PID: $APP_PID"
          
          # Мониторим каждую секунду
          for i in {1..60}; do
            if ps -p $APP_PID > /dev/null; then
              echo "✅ Still running after $i seconds"
              sleep 1
            else
              echo "❌ DIED after $i seconds"
              echo "=== Checking why it died ==="
              
              # Пробуем запустить с выводом ошибок в консоль
              echo "=== Trying to run with error output ==="
              java -Xms16m -Xmx64m -jar ar-webapp-1.0.0.jar --server.port=2062 2>&1 | head -100
              exit 1
            fi
          done
          
          echo "🎉 SUCCESS! Application running for 60 seconds"
          echo "Process info:"
          ps -p $APP_PID -o pid,vsz,rss,pcpu,comm
    depends_on: [check-if-we-have-space]