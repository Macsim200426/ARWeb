kind: pipeline
type: docker
name: direct-deploy

trigger:
  branch:
    - main
    - master

steps:
  - name: build
    image: maven:3.9.8-eclipse-temurin-21
    commands:
      - mvn clean package -DskipTests

  - name: copy-jar
    image: appleboy/drone-scp
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      target: /opt/app/
      source:
        - target/*.jar
      strip_components: 0
    depends_on: [build]

  - name: install-java
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - |
          echo "=== Installing Java ==="
          sudo apt update
          sudo apt install -y wget
          cd /tmp
          wget -q https://download.java.net/java/GA/jdk21/fd2272bbf8e04c3dbaee13770090416c/35/GPL/openjdk-21_linux-x64_bin.tar.gz
          sudo tar -xzf openjdk-21_linux-x64_bin.tar.gz -C /opt
          sudo ln -sf /opt/jdk-21 /opt/java
          echo 'export JAVA_HOME=/opt/java' >> ~/.bashrc
          echo 'export PATH=$JAVA_HOME/bin:$PATH' >> ~/.bashrc
          source ~/.bashrc
          /opt/java/bin/java -version
    depends_on: [copy-jar]

  - name: deploy-and-run
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - |
          # –û–±–Ω–æ–≤–ª—è–µ–º PATH
          export JAVA_HOME=/opt/java
          export PATH=$JAVA_HOME/bin:$PATH
          source ~/.bashrc
          
          cd /opt/app
          echo "=== Checking files ==="
          ls -la
          
          echo "=== Stopping existing application ==="
          pkill -f "java -jar.*ar-webapp" || true
          sleep 5
          
          echo "=== Starting new application ==="
          mkdir -p models logs
          JAR_FILE="ar-webapp-1.0.0.jar"
          echo "Starting: $JAR_FILE"
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –∏ —Å—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä—è–µ–º
          nohup java -jar "$JAR_FILE" --server.port=2062 > logs/app.log 2>&1 &
          APP_PID=$!
          echo "App PID: $APP_PID"
          
          # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
          sleep 15
          
          echo "=== Checking if app is running ==="
          if ps -p $APP_PID > /dev/null; then
            echo "‚úÖ Application is running with PID: $APP_PID"
          else
            echo "‚ùå Application failed to start"
            echo "=== Checking logs ==="
            cat logs/app.log || echo "No logs found"
            exit 1
          fi
          
          echo "=== Checking port 2062 ==="
          netstat -tlnp | grep 2062 || echo "Port 2062 not listening"
          
          echo "=== Recent logs ==="
          tail -30 logs/app.log
          
          echo "üéâ Deployment completed successfully!"
    depends_on: [install-java]